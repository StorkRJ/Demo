p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
data = my_df5,
line = list(color = 'black')
)
p
plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
) %<% add_markers()
plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
) %>% add_markers()
plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
) %>% add_markers(p, color = ~factor(my_df5$Leading_Digit))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>%add_markers(p, color = ~factor(my_df5$Leading_Digit))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( , symbol = ~factor(cyl), color = I("black"))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( , symbol = ~factor(two_power.Freq), color = I("black"))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( , symbol = ~factor( my_df5$two_power.Freq), color = I("black"))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( ,  color =  ~factor( my_df5$two_power.Freq), )
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
xDF1 %>% data.frame(y = 2*xDF1 + rnorm(100) + 9 , x=.) %>% ggplot(aes(x, y)) + geom_point() + geom_smooth(method='lm')
NOBEL   <- read.table(url("https://raw.githubusercontent.com/dsy109/Supplemental/main/Courses/705/nobel.txt"),header = TRUE)
typeof(NOBEL)
class(NOBEL$prize_year)
class(NOBEL$category)
typeof(NOBEL$gender)
typeof(NOBEL$age)
NOBEL$category <- as.factor(NOBEL$category)
table(NOBEL$category[which(is.na(NOBEL$age))])
table(NOBEL$category[which(is.na(NOBEL$gender))])
ggplot(diamonds, aes(carat)) +
geom_density()
ggplot(NOBEL, aes(x=age)) + geom_histogram(aes(y=..density..)) +   geom_density(color="red")
ggplot(NOBEL, aes(x=age)) +
geom_histogram(aes(y=..density..)) +
facet_wrap(vars(category)) +
geom_density(color="red")
base_size <- 11
ggplot(NOBEL, aes(x=prize_year,y =age  )) +
geom_point(aes(colour=gender)) +
facet_wrap(vars(category)) +
geom_smooth(method = loess)+
theme_bw(base_size = 11,
base_line_size = base_size/22,
base_rect_size = base_size/22
)
COVID   <- read.csv(url("https://raw.githubusercontent.com/dsy109/Supplemental/main/Courses/705/COVID.txt"), sep = "\t")
first.digit  <- function(x) {
a <- trunc(log10(x))+1
return(trunc(x/10^(a-1)))
}
power_32 <- 2^seq(1:1000)
mytable <- table(sapply(power_32, function(x) {
first.digit(x)}))
mytable/1000
power_33 <- 3^seq(1:500)
mytable3 <- table(sapply(power_33, function(x) {
first.digit(x)}))
mytable3/500
my_covid <- COVID$Deaths
mytable4 <- table(sapply(my_covid, function(x) {
first.digit(x)}))
mytable4/192
my_df5 <- data.frame(
Leading_Digit = 1:9,
two_power = mytable/1000,
three_power = mytable3/500,
Prop_COVID = mytable4/192
)
my_df5$two_power.Var1 <- NULL
my_df5$three_power.Var1 <- NULL
my_df5$Prop_COVID.Var1 <- NULL
my_df5$three_power.Freq
summary(lm(Prop_COVID.Freq~two_power.Freq + three_power.Freq ,data = my_df5))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( ,  color =  ~factor( my_df5$two_power.Freq), )
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), )
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,)
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,)
)
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,)
p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), )
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( mode = "markers",  color =  ~factor( my_df5$Leading_Digit), )
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" )
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" )
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout(“Benford’s Law Demonstration”)
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout('“Benford’s Law Demonstration')
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout('“Benford’s Law Demonstration')
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration')
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration', xaxis = list(title = "Proportion Powers of 2"),
yaxis = list(title = "Proportion Powers of 3"),
zaxis = list(title = "Proportion COVID Deaths"))
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration',
xaxis = 'Proportion Powers of 2',)
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( ,  color =  ~factor( my_df5$Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration',
xaxis = 'Proportion Powers of 2')
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( data = my_df5,  color =  ~factor( Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration',
xaxis = 'Proportion Powers of 2')
p
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( data = my_df5,  color =  ~factor( Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration',
xaxis = 'Proportion Powers of 2')
p
install.packages(HoRM)
install.packages("HoRM")
library(HoRM)
data("tortoise")
library(HoRM)
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
xDF1 %>% data.frame(y = 2*xDF1 + rnorm(100) + 9 , x=.) %>% ggplot(aes(x, y)) + geom_point() + geom_smooth(method='lm')
NOBEL   <- read.table(url("https://raw.githubusercontent.com/dsy109/Supplemental/main/Courses/705/nobel.txt"),header = TRUE)
typeof(NOBEL)
class(NOBEL$prize_year)
class(NOBEL$category)
typeof(NOBEL$gender)
typeof(NOBEL$age)
NOBEL$category <- as.factor(NOBEL$category)
table(NOBEL$category[which(is.na(NOBEL$age))])
table(NOBEL$category[which(is.na(NOBEL$gender))])
ggplot(diamonds, aes(carat)) +
geom_density()
ggplot(NOBEL, aes(x=age)) + geom_histogram(aes(y=..density..)) +   geom_density(color="red")
ggplot(NOBEL, aes(x=age)) +
geom_histogram(aes(y=..density..)) +
facet_wrap(vars(category)) +
geom_density(color="red")
base_size <- 11
ggplot(NOBEL, aes(x=prize_year,y =age  )) +
geom_point(aes(colour=gender)) +
facet_wrap(vars(category)) +
geom_smooth(method = loess)+
theme_bw(base_size = 11,
base_line_size = base_size/22,
base_rect_size = base_size/22
)
COVID   <- read.csv(url("https://raw.githubusercontent.com/dsy109/Supplemental/main/Courses/705/COVID.txt"), sep = "\t")
first.digit  <- function(x) {
a <- trunc(log10(x))+1
return(trunc(x/10^(a-1)))
}
power_32 <- 2^seq(1:1000)
mytable <- table(sapply(power_32, function(x) {
first.digit(x)}))
mytable/1000
power_33 <- 3^seq(1:500)
mytable3 <- table(sapply(power_33, function(x) {
first.digit(x)}))
mytable3/500
my_covid <- COVID$Deaths
mytable4 <- table(sapply(my_covid, function(x) {
first.digit(x)}))
mytable4/192
my_df5 <- data.frame(
Leading_Digit = 1:9,
two_power = mytable/1000,
three_power = mytable3/500,
Prop_COVID = mytable4/192
)
my_df5$two_power.Var1 <- NULL
my_df5$three_power.Var1 <- NULL
my_df5$Prop_COVID.Var1 <- NULL
my_df5$three_power.Freq
summary(lm(Prop_COVID.Freq~two_power.Freq + three_power.Freq ,data = my_df5))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)
p <- p %>% add_markers( data = my_df5,  color =  ~factor( Leading_Digit), mode = "markers" ) %>% layout( title ='Benford’s Law Demonstration',
xaxis = 'Proportion Powers of 2')
p
View(my_df5)
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
xDF1 %>% data.frame(y = 2*xDF1 + rnorm(100) + 9 , x=.) %>% ggplot(aes(x, y)) + geom_point() + geom_smooth(method='lm')
NOBEL   <- read.table(url("https://raw.githubusercontent.com/dsy109/Supplemental/main/Courses/705/nobel.txt"),header = TRUE)
typeof(NOBEL)
class(NOBEL$prize_year)
class(NOBEL$category)
typeof(NOBEL$gender)
typeof(NOBEL$age)
NOBEL$category <- as.factor(NOBEL$category)
table(NOBEL$category[which(is.na(NOBEL$age))])
table(NOBEL$category[which(is.na(NOBEL$gender))])
ggplot(NOBEL, aes(x=age)) + geom_histogram(aes(y=..density..)) +   geom_density(color="red")
ggplot(NOBEL, aes(x=age)) +
geom_histogram(aes(y=..density..)) +
facet_wrap(vars(category)) +
geom_density(color="red")
base_size <- 11
ggplot(NOBEL, aes(x=prize_year,y =age  )) +
geom_point(aes(colour=gender)) +
facet_wrap(vars(category)) +
geom_smooth(method = loess)+
theme_bw(base_size = 11,
base_line_size = base_size/22,
base_rect_size = base_size/22
)
COVID   <- read.csv(url("https://raw.githubusercontent.com/dsy109/Supplemental/main/Courses/705/COVID.txt"), sep = "\t")
first.digit  <- function(x) {
a <- trunc(log10(x))+1
return(trunc(x/10^(a-1)))
}
power_32 <- 2^seq(1:1000)
mytable <- table(sapply(power_32, function(x) {
first.digit(x)}))
mytable/1000
power_33 <- 3^seq(1:500)
mytable3 <- table(sapply(power_33, function(x) {
first.digit(x)}))
mytable3/500
my_covid <- COVID$Deaths
mytable4 <- table(sapply(my_covid, function(x) {
first.digit(x)}))
mytable4/192
my_df5 <- data.frame(
Leading_Digit = 1:9,
two_power = mytable/1000,
three_power = mytable3/500,
Prop_COVID = mytable4/192
)
my_df5$two_power.Var1 <- NULL
my_df5$three_power.Var1 <- NULL
my_df5$Prop_COVID.Var1 <- NULL
my_df5$three_power.Freq
summary(lm(Prop_COVID.Freq~two_power.Freq + three_power.Freq ,data = my_df5))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)  %>% add_markers( data = my_df5,  color =  ~factor( Leading_Digit), mode = 'markers' ) %>%
layout( title ='Benford’s Law Demonstration',scene = list(xaxis = list(title = 'First Digit (Powers of 2)'),
yaxis = list(title = 'First Digit (Powers of 3)”'),  zaxis = list(title = 'First Digit (COVID Data)')
))
knitr::include_graphics("Screenshot 2023-08-30 154216.png")
library(HoRM)
data("tortoise")
ggplot(tortoise,aes(clutch, length)) +
geom_point() +
geom_smooth(method='lm')
ggplot(tortoise,aes(clutch, length)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggplot(tortoise,aes(clutch, length)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2)+I(x^3))
my_1 <-  lm(length ~ clutch,data = tortoise)
my_2 <-  lm(length ~ clutch + I(clutch^2),data = tortoise)
my_3 <-  lm(length ~ clutch + I(clutch^2)+I(clutch^3),data = tortoise)
anova(my_1,my_2)
anova(my_3,my_2)
anova(my_1,my_3)
step(my_3)
step(my_3,k=log(length(tortoise$length)))
p <- plot_ly(
x = my_df5$two_power.Freq,
y = my_df5$three_power.Freq ,
z = my_df5$Prop_COVID.Freq,
type = 'scatter3d' ,
mode='lines',
line = list(color = 'black')
)  %>% add_markers( data = my_df5,  color =  ~factor( Leading_Digit), mode = 'markers' ) %>%
layout( title ='Benford’s Law Demonstration',scene = list(xaxis = list(title = 'First Digit (Powers of 2)'),
yaxis = list(title = 'First Digit (Powers of 3)”'),  zaxis = list(title = 'First Digit (COVID Data)')
))
p
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
runif(100) %>% data.frame(y = 2*x + rnorm(100) + 9 , x=.)
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
runif(100) %>% data.frame(y = 2*x + rnorm(100) + 9 , x=.)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
runif(100) %>% data.frame(y = 2*x + rnorm(100) + 9 , x=.)
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
runif(100) %>% data.frame(y = 2*x + rnorm(100) + 9 , x=.)
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
runif(100) %>% data.frame(y = 2*. + rnorm(100) + 9 , x=.)
%>% ggplot(aes(x, y)) + geom_point() + geom_smooth(method='lm')
set.seed(12)
xDF1 <- runif(100)  #how to simulate data before $>%
runif(100) %>% data.frame(y = 2*. + rnorm(100) + 9 , x=.)%>% ggplot(aes(x, y)) + geom_point() + geom_smooth(method='lm')
my_1 <-  lm(clutch ~  length,data = tortoise)
my_2 <-  lm(clutch ~ length + I(length^2),data = tortoise)
my_3 <-  lm(clutch ~ length + I(length^2)+I(length^3),data = tortoise)
anova(my_1,my_2)
anova(my_3,my_2)
library(HoRM)
data("tortoise")
ggplot(tortoise,aes(clutch, length)) +
geom_point() +
geom_smooth(method='lm')
ggplot(tortoise,aes(length,clutch)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2)+I(x^3))
ggplot(tortoise,aes(length,clutch)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggplot(tortoise,aes(length,clutch)) +
geom_point() +
geom_smooth(method='lm')
my_1 <-  lm(clutch ~  length,data = tortoise)
my_2 <-  lm(clutch ~ length + I(length^2),data = tortoise)
my_3 <-  lm(clutch ~ length + I(length^2)+I(length^3),data = tortoise)
anova(my_1,my_2)
anova(my_3,my_2)
anova(my_1,my_3)
step(my_3)
step(my_3,k=log(length(tortoise$length)))
